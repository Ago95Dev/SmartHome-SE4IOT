[
    {
        "id": "76e4921e87a05a32",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "mqttBroker",
        "type": "mqtt-broker",
        "name": "MQTT Broker",
        "broker": "broker",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "7e2934393ac03b0c",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": 8086,
        "protocol": "http",
        "database": "database",
        "name": "univaq",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "2.0",
        "url": "http://influxdb:8086",
        "timeout": 10,
        "rejectUnauthorized": true
    },
    {
        "id": "mqttInNode",
        "type": "mqtt in",
        "z": "76e4921e87a05a32",
        "name": "MQTT Input",
        "topic": "topicTest",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "mqttBroker",
        "nl": false,
        "rap": false,
        "rh": 0,
        "inputs": 0,
        "x": 200,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "32ab7c92513ab7e1",
        "type": "mqtt in",
        "z": "76e4921e87a05a32",
        "name": "livTemp",
        "topic": "SmartHome/livingRoom/temperature",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "mqttBroker",
        "nl": false,
        "rap": false,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 280,
        "wires": [
            [
                "3255fb950199033f"
            ]
        ]
    },
    {
        "id": "93eb87103951960d",
        "type": "debug",
        "z": "76e4921e87a05a32",
        "name": "Debug MQTT",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 240,
        "wires": []
    },
    {
        "id": "ddb1cba5cc2fcff1",
        "type": "http request",
        "z": "76e4921e87a05a32",
        "name": "tgbot alert",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.telegram.org/bot<token>/sendMessage",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "",
                "valueType": "other",
                "valueValue": ""
            }
        ],
        "x": 1380,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "8dc0b6249cd06292",
        "type": "function",
        "z": "76e4921e87a05a32",
        "name": "send alert",
        "func": "var val = msg.payload.value;\nvar place= msg.payload.place;\nvar sens = msg.payload.sensor;\nmsg.payload = {\n    chat_id: \"-4703470840\", // ID del gruppo\n    text:\n    \"Domain: \" + \"SmartHome\" + \"\\n\" +\n    \"Location: \" + place + \"\\n\" +\n    \"Sensor: \" + sens + \"\\n\" +\n    \"Condition: Exceded max val\"\n};\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 280,
        "wires": [
            [
                "ddb1cba5cc2fcff1"
            ]
        ]
    },
    {
        "id": "26ddd0e43536d9b4",
        "type": "inject",
        "z": "76e4921e87a05a32",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "90",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 60,
        "wires": [
            [
                "83e7dbbe33056d07"
            ]
        ]
    },
    {
        "id": "34d528bb595484f9",
        "type": "debug",
        "z": "76e4921e87a05a32",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 40,
        "wires": []
    },
    {
        "id": "83e7dbbe33056d07",
        "type": "function",
        "z": "76e4921e87a05a32",
        "name": "function 2",
        "func": "msg.payload = {value:600}\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 60,
        "wires": [
            [
                "34d528bb595484f9",
                "b1465d6f93c0de3a"
            ]
        ]
    },
    {
        "id": "b1465d6f93c0de3a",
        "type": "influxdb out",
        "z": "76e4921e87a05a32",
        "influxdb": "7e2934393ac03b0c",
        "name": "univaq",
        "measurement": "value",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "univaq",
        "bucket": "smart_home_iot",
        "x": 570,
        "y": 100,
        "wires": []
    },
    {
        "id": "56e146e9b511f1bc",
        "type": "function",
        "z": "76e4921e87a05a32",
        "name": "temperature check",
        "func": "var temp_value = msg.payload.value\n\nif(temp_value > 20){\nreturn msg;\n}\n    \n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 280,
        "wires": [
            [
                "93eb87103951960d",
                "8dc0b6249cd06292"
            ]
        ]
    },
    {
        "id": "8167e4f8183fc413",
        "type": "mqtt in",
        "z": "76e4921e87a05a32",
        "name": "bedTemp",
        "topic": "SmartHome/bedroom/temperature",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "mqttBroker",
        "nl": false,
        "rap": false,
        "rh": 0,
        "inputs": 0,
        "x": 200,
        "y": 380,
        "wires": [
            [
                "9c00ce625ea65f38"
            ]
        ]
    },
    {
        "id": "48e209bea246f2fe",
        "type": "mqtt in",
        "z": "76e4921e87a05a32",
        "name": "livLight",
        "topic": "SmartHome/livingRoom/light",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "mqttBroker",
        "nl": false,
        "rap": false,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 500,
        "wires": [
            [
                "e58b6cfeca6b2c12"
            ]
        ]
    },
    {
        "id": "625f726eabfccb88",
        "type": "mqtt in",
        "z": "76e4921e87a05a32",
        "name": "bedLight",
        "topic": "SmartHome/bedroom/light",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "mqttBroker",
        "nl": false,
        "rap": false,
        "rh": 0,
        "inputs": 0,
        "x": 200,
        "y": 600,
        "wires": [
            [
                "9b06fda8c2476965"
            ]
        ]
    },
    {
        "id": "3255fb950199033f",
        "type": "function",
        "z": "76e4921e87a05a32",
        "name": "JSON converter",
        "func": "\nlet val = parseInt(msg.payload);\n\nmsg.payload = {\n    place: \"livingroom\",\n    sensor: \"temperature\",\n    value: val  \n};\n\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 280,
        "wires": [
            [
                "56e146e9b511f1bc"
            ]
        ]
    },
    {
        "id": "9c00ce625ea65f38",
        "type": "function",
        "z": "76e4921e87a05a32",
        "name": "JSON converter",
        "func": "\nlet val = parseInt(msg.payload);\n\nmsg.payload = {\n    place: \"bedroom\",\n    sensor: \"temperature\",\n    value: val\n    \n};\n\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 380,
        "wires": [
            [
                "ebfd701fe6506fd9"
            ]
        ]
    },
    {
        "id": "0e58c8b40b18f3b4",
        "type": "debug",
        "z": "76e4921e87a05a32",
        "name": "Debug MQTT",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 340,
        "wires": []
    },
    {
        "id": "369060609f013492",
        "type": "function",
        "z": "76e4921e87a05a32",
        "name": "send alert",
        "func": "var val = msg.payload.value;\nvar place= msg.payload.place;\nvar sens = msg.payload.sensor;\nmsg.payload = {\n    chat_id: \"-4703470840\", // ID del gruppo\n    text:\n    \"Domain: \" + \"SmartHome\" + \"\\n\" +\n    \"Location: \" + place + \"\\n\" +\n    \"Sensor: \" + sens + \"\\n\" +\n    \"Condition: Exceded max val\"\n};\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 380,
        "wires": [
            [
                "ddb1cba5cc2fcff1"
            ]
        ]
    },
    {
        "id": "e58b6cfeca6b2c12",
        "type": "function",
        "z": "76e4921e87a05a32",
        "name": "JSON converter",
        "func": "\nlet val = parseInt(msg.payload);\n\nmsg.payload = {\n    place: \"livingroom\",\n    sensor: \"light\",\n    value: val\n    \n};\n\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 500,
        "wires": [
            [
                "91a8585d21109f84"
            ]
        ]
    },
    {
        "id": "2f06c2b21f64e979",
        "type": "debug",
        "z": "76e4921e87a05a32",
        "name": "Debug MQTT",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 460,
        "wires": []
    },
    {
        "id": "a4ec5736d406cc7d",
        "type": "function",
        "z": "76e4921e87a05a32",
        "name": "send alert",
        "func": "var val = msg.payload.value;\nvar place= msg.payload.place;\nvar sens = msg.payload.sensor;\nmsg.payload = {\n    chat_id: \"-4703470840\", // ID del gruppo\n    text:\n    \"Domain: \" + \"SmartHome\" + \"\\n\" +\n    \"Location: \" + place + \"\\n\" +\n    \"Sensor: \" + sens + \"\\n\" +\n    \"Condition: Exceded max val\"\n};\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 500,
        "wires": [
            [
                "ddb1cba5cc2fcff1"
            ]
        ]
    },
    {
        "id": "91a8585d21109f84",
        "type": "function",
        "z": "76e4921e87a05a32",
        "name": "Light check",
        "func": "var value = msg.payload.value\n\nif(value == \"off\"){\nreturn msg;\n}\n    \n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 500,
        "wires": [
            [
                "2f06c2b21f64e979",
                "a4ec5736d406cc7d"
            ]
        ]
    },
    {
        "id": "9b06fda8c2476965",
        "type": "function",
        "z": "76e4921e87a05a32",
        "name": "JSON converter",
        "func": "\nlet val = parseInt(msg.payload);\n\nmsg.payload = {\n    place: \"livingroom\",\n    sensor: \"light\",\n    value: val\n    \n};\n\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 600,
        "wires": [
            [
                "0c69c54f632c6d60"
            ]
        ]
    },
    {
        "id": "024869cacf7cc0b4",
        "type": "debug",
        "z": "76e4921e87a05a32",
        "name": "Debug MQTT",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 560,
        "wires": []
    },
    {
        "id": "d3f86d96dbe90376",
        "type": "function",
        "z": "76e4921e87a05a32",
        "name": "send alert",
        "func": "var val = msg.payload.value;\nvar place= msg.payload.place;\nvar sens = msg.payload.sensor;\nmsg.payload = {\n    chat_id: \"-4703470840\", // ID del gruppo\n    text:\n    \"Domain: \" + \"SmartHome\" + \"\\n\" +\n    \"Location: \" + place + \"\\n\" +\n    \"Sensor: \" + sens + \"\\n\" +\n    \"Condition: Exceded max val\"\n};\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 600,
        "wires": [
            [
                "ddb1cba5cc2fcff1"
            ]
        ]
    },
    {
        "id": "0c69c54f632c6d60",
        "type": "function",
        "z": "76e4921e87a05a32",
        "name": "Light check",
        "func": "var value = msg.payload.value\n\nif(value == \"off\"){\nreturn msg;\n}\n    \n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 600,
        "wires": [
            [
                "024869cacf7cc0b4",
                "d3f86d96dbe90376"
            ]
        ]
    },
    {
        "id": "ebfd701fe6506fd9",
        "type": "function",
        "z": "76e4921e87a05a32",
        "name": "temperature check",
        "func": "var temp_value = msg.payload.value\n\nif(temp_value > 20){\nreturn msg;\n}\n    \n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 380,
        "wires": [
            [
                "369060609f013492"
            ]
        ]
    }
]